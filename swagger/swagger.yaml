openapi: 3.0.0
info:
  title: School Management API
  version: 1.0.0
  description: API documentation for the School Management System

servers:
  - url: http://localhost:3000
    description: Local server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security: []  # Global security disabled by default

paths:
  /api/auth/login:
    post:
      summary: Login to get a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication

  /api/schools:
    get:
      summary: Get all schools
      responses:
        '200':
          description: List of schools
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    address:
                      type: string
                    contactNumber:
                      type: string
      security: []  # No authentication required for GET request

    post:
      summary: Create a new school (SuperAdmin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the school
                address:
                  type: string
                  description: Address of the school
                contactNumber:
                  type: string
                  description: Contact number of the school
              required:
                - name
                - address
                - contactNumber
      responses:
        '201':
          description: School created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  school:
                    type: object
                    properties:
                      name:
                        type: string
                      address:
                        type: string
                      contactNumber:
                        type: string
      security:
        - BearerAuth: []  # Authentication required for POST request

  /api/schools/{id}:
    get:
      summary: Get a specific school by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the school to fetch
      responses:
        '200':
          description: School details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  address:
                    type: string
                  contactNumber:
                    type: string
        '404':
          description: School not found
      security: []  # No authentication required for GET by ID

    put:
      summary: Update a school (SuperAdmin or SchoolAdmin only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the school to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Updated name of the school
                address:
                  type: string
                  description: Updated address of the school
                contactNumber:
                  type: string
                  description: Updated contact number of the school
              required:
                - name
                - address
                - contactNumber
      responses:
        '200':
          description: School updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updatedSchool:
                    type: object
                    properties:
                      name:
                        type: string
                      address:
                        type: string
                      contactNumber:
                        type: string
        '404':
          description: School not found
      security:
        - BearerAuth: []  # Authentication required for PUT request

    delete:
      summary: Delete a school (SuperAdmin or SchoolAdmin only)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the school to delete
      responses:
        '200':
          description: School deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: School not found
      security:
        - BearerAuth: []  # Authentication required for DELETE request

  /api/classrooms/{schoolId}:
    get:
      summary: Get all classrooms for a specific school
      description: "Retrieve all classrooms for the provided school ID. Anyone can access this route."
      parameters:
        - name: "schoolId"
          in: "path"
          required: true
          description: "The ID of the school to fetch classrooms for"
          schema:
            type: "string"
      responses:
        '200':
          description: "List of classrooms"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                    teacher:
                      type: "object"
                      properties:
                        name:
                          type: "string"
                        email:
                          type: "string"
        '404':
          description: "No classrooms found for this school"
        '500':
          description: "Server error"
      security: []  # No authentication required for GET request

  /api/classrooms:
    post:
      summary: "Create a new classroom (SchoolAdmin or SuperAdmin only)"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Name of the classroom"
                teacher:
                  type: string
                  description: "Teacher ID for the classroom"
                school:
                  type: string
                  description: "School ID for the classroom"
              required:
                - name
                - teacher
                - school
      responses:
        '201':
          description: "Classroom created successfully"
        '403':
          description: "Unauthorized, only SchoolAdmin or SuperAdmin can create"
        '500':
          description: "Server error"
      security:
        - BearerAuth: []  # Authentication required for POST request

  /api/classrooms/{classroomId}:
    put:
      summary: "Update a classroom (SchoolAdmin or SuperAdmin only)"
      parameters:
        - name: "classroomId"
          in: "path"
          required: true
          description: "ID of the classroom to update"
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Updated name of the classroom"
                teacher:
                  type: string
                  description: "Updated teacher ID"
      responses:
        '200':
          description: "Classroom updated successfully"
        '403':
          description: "Unauthorized, only SchoolAdmin or SuperAdmin can update"
        '404':
          description: "Classroom not found"
        '500':
          description: "Server error"
      security:
        - BearerAuth: []  # Authentication required for PUT request

    delete:
      summary: "Delete a classroom (SchoolAdmin or SuperAdmin only)"
      parameters:
        - name: "classroomId"
          in: "path"
          required: true
          description: "ID of the classroom to delete"
          schema:
            type: "string"
      responses:
        '200':
          description: "Classroom deleted successfully"
        '403':
          description: "Unauthorized, only SchoolAdmin or SuperAdmin can delete"
        '404':
          description: "Classroom not found"
        '500':
          description: "Server error"
      security:
        - BearerAuth: []  # Authentication required for DELETE request
